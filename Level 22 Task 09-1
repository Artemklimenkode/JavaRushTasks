
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;

/* Обращенные слова
В методе main с консоли считать имя файла, который содержит слова, разделенные пробелами.
Найти в тексте все пары слов, которые являются обращением друг друга. Добавить их в result.
Порядок слов first/second не влияет на тестирование.
Использовать StringBuilder.
Пример содержимого файла
рот тор торт о
о тот тот тот
Вывод:
рот тор
о о
тот тот
*/
public class Main {
    public static List<Pair> result = new LinkedList<>();

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        BufferedReader fileReader = new BufferedReader(new FileReader ("test2"));
        StringBuilder appender = new StringBuilder("");
        String s;
        while((s = fileReader.readLine()) != null){

            appender.append(s+" ");

        }

        String[] data = appender.toString().trim().split(" ");
        for (String x:
             data) {

        }
     for (int i = 0; i <data.length ; i++)
        {
            Pair pair = new Pair();
            String compare = data[i];
            for (int j = 0; j <data.length ; j++)
            {
                StringBuilder a = new StringBuilder(data[j]).reverse();
                String rev = a.toString();
                if(compare.equals(rev)  && i!=j && compare!=null){
                    pair.first = compare;
                    pair.second = data[j];
                    data[i] = "30";
                    data[j] = "13";
                    compare = "";
                    rev = "";
                    result.add(pair);
                }
            }
        }
        for (Pair p:result) {
            System.out.println(p.first + " " + p.second);
        }
        reader.close();
        fileReader.close();
    }

    public static class Pair {
        String first;
        String second;

        @Override
        public String toString() {
            return  first == null && second == null ? "" :
                    first == null && second != null ? second :
                            second == null && first != null ? first :
                                    first.compareTo(second) < 0 ? first + " " + second : second + " " + first;

        }
    }

}

